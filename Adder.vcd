$date
	Thu Sep 21 00:00:54 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module behavioralFullAdder $end
$var wire 1 ! a $end
$var wire 1 " b $end
$var wire 1 # carryin $end
$var wire 1 $ carryout $end
$var wire 1 % sum $end
$upscope $end
$scope module testFullAdder $end
$var wire 1 & carryout $end
$var wire 1 ' sum $end
$var reg 1 ( a $end
$var reg 1 ) b $end
$var reg 1 * carryin $end
$scope module potatoz $end
$var wire 1 + a $end
$var wire 1 , aandb $end
$var wire 1 - axorb $end
$var wire 1 . b $end
$var wire 1 / candaxorb $end
$var wire 1 0 carryin $end
$var wire 1 & carryout $end
$var wire 1 ' sum $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
00
z/
0.
z-
z,
0+
0*
0)
0(
x'
x&
x%
x$
z#
z"
z!
$end
#50000
0/
0,
0-
#100000
0&
0'
#1000000
1(
1+
#1050000
1-
#1100000
1'
#2000000
1)
1.
0(
0+
#3000000
1(
1+
#3050000
0-
1,
#3100000
0'
1&
#4000000
1*
10
0)
0.
0(
0+
#4050000
1'
0,
#4100000
0&
#5000000
1(
1+
#5050000
1-
#5100000
0'
1/
#5150000
1&
#6000000
1)
1.
0(
0+
#7000000
1(
1+
#7050000
0-
1,
#7100000
1'
0/
#8000000
